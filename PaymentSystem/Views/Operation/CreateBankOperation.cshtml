@model DAO.Model.BankOperation
@{
    ViewBag.Title = "Создать банковский платеж";
}

@using (Html.BeginForm())
{
    <h2>@ViewBag.Title</h2>
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ResipientNumber, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.ResipientNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ResipientNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BancCode, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.BancCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BancCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SortCode, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.SortCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SortCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Comment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Comment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountId, new { @class = "control-label col-md-2 col-md-offset-2" })
            <div class="col-md-6">
                @Html.DropDownListFor(model => model.AccountId, (IEnumerable<SelectListItem>)ViewBag.Accounts, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-4 col-md-offset-2">
                <label for="Prepared" class="control-label ">Сделать отложенным?</label>
            </div>
            <div class="control-label col-md-2">
                @Html.CheckBox("Prepared")
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Оплатить" class="btn btn-default btn-block btn-success" />
            </div>
        </div>
    </div>
}
